
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row">
    <div class="col-md-12">
        <div class="box box-info">
            <div class="box-body">
                <div class="none">
                    <input type="text" class="form-control" id="txtId">
                </div>
                <div class="form-group">
                    <label class="col-sm-2">Mobile No</label>
                    <div class="col-sm-4">
                        <input type="text" class="form-control required" id="txtTelephoneNo" maxlength="11">
                    </div>
                    <label class="col-sm-2">Patient Name</label>
                    <div class="col-sm-4">
                        <input type="text" class="form-control required" id="txtPatientName">
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2">Date Of Birth</label>
                    <div class="col-sm-2">
                        <input type="text" class="form-control datepicker required" id="txtDateOfBirth" onchange="GetCurrentAge()">
                    </div>
                    <div class="col-sm-2 input3">
                        <input type="text" class="form-control" id="txtAgeDay" placeholder="Day" onchange="GetDateOfBirth()">
                        <input type="text" class="form-control" id="txtAgeMonth" placeholder="Month" onchange="GetDateOfBirth()">
                        <input type="text" class="form-control" id="txtAgeYear" placeholder="Year" onchange="GetDateOfBirth()">
                    </div>
                    <label class="col-sm-2">Gender</label>
                    <div class="col-sm-4">
                        <select class="form-control required" id="txtGender"></select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2">Fathers Name</label>
                    <div class="col-sm-4">
                        <input type="text" class="form-control required" id="txtFathersName">
                    </div>
                    <label class="col-sm-2">Mothers Name</label>
                    <div class="col-sm-4">
                        <input type="text" class="form-control defaultNA" id="txtMothersName">
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2">Spouse Name</label>
                    <div class="col-sm-4">
                        <input type="text" class="form-control defaultNA" id="txtSpouseName">
                    </div>
                    <label class="col-sm-2">Address</label>
                    <div class="col-sm-4">
                        <input type="text" class="form-control defaultNA" id="txtPatientAddress">
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2">Religion</label>
                    <div class="col-sm-4">
                        <select class="form-control required" id="txtReligion" name="txtReligion"></select>
                    </div>
                    <label class="col-sm-2">Area</label>
                    <div class="col-sm-4">
                        <input type="text" class="form-control defaultNA" id="txtArea">
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2">Occupation</label>
                    <div class="col-sm-4">
                        <input type="text" class="form-control defaultNA" id="txtOccupation">
                    </div>
                    <label class="col-sm-2">Blood Group</label>
                    <div class="col-sm-4">
                        <select class="form-control" id="txtBloodGroup" name="txtBloodGroup"></select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2">National ID No</label>
                    <div class="col-sm-4">
                        <input type="text" class="form-control defaultNA" id="txtNationalId">
                    </div>
                    <label class="col-sm-2">Passport No</label>
                    <div class="col-sm-4">
                        <input type="text" class="form-control defaultNA" id="txtPassportNo">
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2">Introduce By</label>
                    <div class="col-sm-3">
                        <select class="form-control" id="txtInformationFrom" name="txtInformationFrom"></select>
                    </div>
                    <div class="col-sm-1"><a data-toggle="modal" data-target="#newFloor" class="btn btn-sm btn-primary">Add</a></div>
                    <div class="modal fade" id="newFloor">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                                    <p class="modal-title">Add New Introduce Type</p>
                                </div>
                                <div class="modal-body">
                                    <div class="form-group">
                                        <label class="col-sm-2">Introduce Type</label>
                                        <div class="col-sm-10">
                                            <input type="text" class="form-control" id="txtIntroduce">
                                        </div>
                                    </div>
                                    <div class="form-group text-center">
                                        <button type="submit" class="btn btn-info btn-sm" onclick="SaveIntroduce()">Save</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <label class="col-sm-2">Name of Introducer</label>
                    <div class="col-sm-4">
                        <input type="text" class="form-control defaultNA" id="txtNameofIntroducer">
                    </div>
                </div>
                <div class="button-group text-center">
                    <input type="submit" class="btn btn-sm btn-info" id="btnSave" onclick="Save();" value="Save">
                    <input type="submit" class="btn btn-sm btn-danger none" id="btnDelete" value="Delete">
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        GetInfoFromList();

        $('#txtTelephoneNo').autocomplete({
            source: function (request, response) {
                $.ajax({
                    type: "GET",
                    url: "@UrlConfig.Action("GetPatientRegistrationList", "PatientRegistrationApi")",
                    dataType: "Json",
                    data: { 'searchString': $("#txtTelephoneNo").val() },
                    success: function (data) {
                        response(data.slice(0, 10));
                    }
                });
            },
            select: function (event, ui) {
                $("#txtId").val(ui.item.ptId);
                $("#txtPatientName").val(ui.item.ptName);
                $("#txtTelephoneNo").val(ui.item.ptMobileNo);
                $('#txtGender').val(ui.item.ptGendeId);
                $('#txtFathersName').val(ui.item.ptFatherName);
                $('#txtMothersName').val(ui.item.ptMotherName);
                $('#txtSpouseName').val(ui.item.ptSpooseName);
                $('#txtPatientAddress').val(ui.item.ptAddress);
                $('#txtArea').val(ui.item.ptArea);
                $('#txtReligion').val(ui.item.ptReligionId);
                $('#txtBloodGroup').val(ui.item.ptBloodGroupId);
                $('#txtOccupation').val(ui.item.ptOccupation);
                $('#txtNationalId').val(ui.item.ptNationalIdNo);
                $('#txtPassportNo').val(ui.item.ptPassportNo);
                $('#txtInformationFrom').val(ui.item.ptIntroducerId);
                $('#txtNameofIntroducer').val(ui.item.ptIntroducerId);
                $('#txtDateOfBirth').val(ToJsonDate(ui.item.ptDob)).trigger("change");
                $("#btnSave").val("Update");
                $("#btnDelete").css("display", "unset");
                return false;
            },
            minLength: 3
        }).data("ui-autocomplete")._renderItem = function (ul, item) {
            if (ul.children().length === 0) {
                $("<thead><tr><th>DrCode</th><th>Dr Name</th><th>Mobile</th><th>Speciality</th></tr></thead>").appendTo(ul);
            }
            var html = "<td>" + item.ptName + "</td>";
            html += "<td>" + item.ptMobileNo + "</td>";
            html += "<td>" + item.ptFatherName + "</td>";
            html += "<td>" + item.ptAddress + "</td>";
            return $("<tr></tr>").append(html).appendTo(ul);
        };
    });

    function GetCurrentAge() {
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetCurrentAge", "PatientRegistration")',
            dataType: "Json",
            data: { 'dateOfBirth': $('#txtDateOfBirth').val() },
            success: function (data) {
                $('#txtAgeYear').val(data.Year);
                $('#txtAgeMonth').val(data.Month);
                $('#txtAgeDay').val(data.Day);
            }
        });
    }

    function GetDateOfBirth() {
        if ($('#txtAgeYear').val() == "") { $('#txtAgeYear').val(0); }
        if ($('#txtAgeMonth').val() == "") { $('#txtAgeMonth').val(0); }
        if ($('#txtAgeDay').val() == "") { $('#txtAgeDay').val(0); }

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetDateOfBirth", "PatientRegistration")',
            dataType: "Json",
            data: { 'day': $('#txtAgeDay').val(), 'month': $('#txtAgeMonth').val(), 'years': $('#txtAgeYear').val() },
            success: function (data) {
                $('#txtDateOfBirth').val(data);
            }
        });
    }


    function GetInfoFromList() {
        $.ajax({
            type: "GET",
            url: "@UrlConfig.Action("GetInfoFromList", "PatientRegistrationApi")",
            dataType: "Json",
            success: function (data) {
                $('#txtInformationFrom').html($("<option></option>").attr("value", 0).text("-- Select --"));
                $.each(data, function (key, item) {
                    var rows = "<option value='" + item.id + "'>" + item.name + "</option>";
                    $('#txtInformationFrom').append(rows);
                });
            },
            error: function (errormessage) { alert(errormessage.responseText); }
        });
    }

    function SaveIntroduce() {
        if ($('#txtIntroduce').val() == '') { $('#txtIntroduce').css('border-color', 'Red'); return false; }
        $.ajax({
            url: "@UrlConfig.Action("GetSaveIntoduceInfo", "PatientRegistrationApi")",
            type: 'GET',
            datatype: JSON,
            data: { 'name': $("#txtIntroduce").val() },
            success: function (data) {
                $('#txtInformationFrom').append($('<option></option>').val(data.result).html($("#txtIntroduce").val()).prop('selected', true));
                $('.modal').modal('hide');
            },
            error: function (errormessage) { alert(errormessage.responseText); }
        });
        return false;
    }

    function Save() {
        var res = validation();
        if (res == true) {
            var object = {
                PtId: $('#txtId').val(),
                PtMobileNo: $('#txtTelephoneNo').val(),
                PtName: $('#txtPatientName').val(),
                PtGendeId: $('#txtGender').val(),
                PtDob: $('#txtDateOfBirth').val(),
                PtFatherName: $('#txtFathersName').val(),
                PtMotherName: $('#txtMothersName').val(),
                PtSpooseName: $('#txtSpouseName').val(),
                PtAddress: $('#txtPatientAddress').val(),
                PtArea: $('#txtArea').val(),
                PtReligionId: $('#txtReligion').val(),
                PtBloodGroupId: $('#txtBloodGroup').val(),
                PtOccupation: $('#txtOccupation').val(),
                PtNationalIdNo: $('#txtNationalId').val(),
                PtPassportNo: $('#txtPassportNo').val(),
                PtIntroducerId: $('#txtInformationFrom').val(),
                PtIntroducerName: $('#txtNameofIntroducer').val(),
                UserName: "@System.Web.HttpContext.Current.Session["UserName"]",
            };
            $.ajax({
                url: "@UrlConfig.Action("Post", "PatientRegistrationApi")",
                data: JSON.stringify(object),
                type: 'POST',
                contentType: "application/json;charset=utf-8",
                datatype: JSON,
                success: function (data) {
                    if (data.output != "error") {
                        alert(data.msg);
                        location.reload(true);
                    } else {
                        alert(data.msg);
                    }
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
            return false;
        }
        else {
            alert("Please fill required field");
        }
        return false;
    }


    $("#btnDelete").on('click', function () {
        $.confirm('Are You Sure?', 'Confirmation', function () {
            $.ajax({
                type: "GET",
                url: "@UrlConfig.Action("GetDeleteById", "PatientRegistrationApi")",
                dataType: "Json",
                data: { 'id': $("#txtId").val() },
                success: function (data) {
                    location.reload();
                }
            });
        });
    });

    $('#txtNameofIntroducer').on('keyup', function () {
        if ($('#txtInformationFrom').val() == 1) {
            $('#txtNameofIntroducer').autocomplete({
                source: function (request, response) {
                    $.ajax({
                        type: "GET",
                        url: "@UrlConfig.Action("GetDoctorList", "DoctorApi")",
                        dataType: "Json",
                        data: { 'searchString': $("#txtNameofIntroducer").val() },
                        success: function (data) {
                            response(data.slice(0, 10));
                        }
                    });
                },
                select: function (event, ui) {
                    $('#txtNameofIntroducer').val(ui.item.name);
                    return false;
                },
                minLength: 3
            }).data("ui-autocomplete")._renderItem = function (ul, item) {
                if (ul.children().length === 0) {
                    $("<thead><tr><th>DrCode</th><th>Dr Name</th><th>Mobile</th><th>Speciality</th></tr></thead>").appendTo(ul)
                }
                var html = "<td>" + item.code + "</td>";
                html += "<td>" + item.name + "</td>";
                html += "<td>" + item.mobileNo + "</td>";
                html += "<td>" + item.speciality + "</td>";
                return $("<tr></tr>").append(html).appendTo(ul);
            };
        }
        if ($('#txtInformationFrom').val() == 5) {
            $('#txtNameofIntroducer').autocomplete({
                source: function (request, response) {
                    $.ajax({
                        type: "GET",
                        url: "@UrlConfig.Action("GetMioList", "DoctorApi")",
                        dataType: "Json",
                        data: { 'searchString': $("#txtNameofIntroducer").val() },
                        success: function (data) {
                            response(data.slice(0, 10));
                        }
                    }); 
                },
                select: function (event, ui) {
                    $('#txtNameofIntroducer').val(ui.item.name);
                    return false;
                },
                minLength: 3
            }).data("ui-autocomplete")._renderItem = function (ul, item) {
                if (ul.children().length === 0) {
                    $("<thead><tr><th>ID</th><th>MIO Name</th></thead>").appendTo(ul)
                }
                var html = "<td>" + item.id + "</td>";
                html += "<td>" + item.name + "</td>";
                return $("<tr></tr>").append(html).appendTo(ul);
            };
        }

    });

    function validation() {
        var isValid = true;

        return isValid;
    }
</script>

@section Scripts
{
    <script>
        $(document).ready(function () {
            GetGenderList();
            GetReligionList();
            GetBloodGroupList();
        })
    </script>
}