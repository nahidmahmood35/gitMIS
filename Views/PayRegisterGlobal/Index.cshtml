@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <div class="box box-info">
            <div class="box-header with-border"><span>পে রেজিস্টার</span></div>
            <div class="box-body">
                <div class="form-group">
                    <label class="col-sm-1">আইডি কোড</label>
                    <div class="col-sm-3">
                        <select class="form-control required  selectNoAdd defaultZero" id="txtCode">
                            <option value="0">--select--</option>
                        </select>
                    </div>
                    <label class="col-sm-1">মাস</label>
                    <div class="col-sm-3">
                        <select class="form-control required  selectNoAdd defaultZero" id="txtMonth">
                            <option value="0">--select--</option>
                        </select>
                    </div>
                    <label class="col-sm-1 ">বছর</label>
                    <div class="col-sm-2 ">
                        <select class=" form-control isnumber year select2" id="txtYear"></select>
                    </div>
                    <div class="col-sm-1"><a class="btn btn-sm btn-success" onclick="ShowToggle()">Search</a></div>
                </div>
            </div>
        </div>
        <div class="box box-info list-area">
            <div class="box-header with-border"><span>কর্মকর্তাদের বেতন বিবরনি</span></div>
            <div class="box-body">
                <div class="form-group">
                    <label class="col-sm-1">নাম</label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control" id="txtEmployeeName" disabled>
                    </div>
                    <label class="col-sm-1">বিভাগ</label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control" id="txtDepartmentName" disabled>
                    </div>
                    <label class="col-sm-1">পদবী</label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control" id="txtDesigationName" disabled>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1">হিসাব নং</label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control defaultNA" id="txtEmployeeBankAccountNo">
                    </div>
                    <label class="col-sm-1">ব্যংক</label>
                    <div class="col-sm-3">
                        
                        <select class="form-control" id="txtEmployeeBankName" onchange="GetEmployeeBankBranceName();">
                            <option value="0">--select--</option>
                        </select>
                            
                        
                    </div>
                    <label class="col-sm-1">ব্যংক শাখা</label>
                    <div class="col-sm-3">
                        
                        <select class="form-control " id="txtEmployeeBankBranch">
                            <option value="0">--select--</option>
                        </select>
                           
                        
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="box box-info">
                            <div class="box-header with-border"><span>উপার্জন</span></div>
                            <div class="box-body">
                                <div class="table-scrollable">
                                    <table class="table table-striped table-hover table-bordered">
                                        <tbody id="Earningbody"></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="box box-info">
                            <div class="box-header with-border"><span>কর্তন</span></div>
                            <div class="box-body">
                                <div class="table-scrollable">
                                    <table class="table table-striped table-hover table-bordered">
                                        <tbody id="Deductionbody"></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2">প্রাথমিক মোট উপার্জন</label>
                    <div class="col-sm-2">
                        <input type="text" class="form-control isnumber" value="0" id="txtBasicEarning" disabled>
                    </div>
                    <label class="col-sm-2">প্রাথমিক মোট কর্তন </label>
                    <div class="col-sm-2">
                        <input type="text" class="form-control isnumber" value="0" id="txtBasicDeduction" disabled>
                    </div>
                    <label class="col-sm-2">মোট বেতন</label>
                    <div class="col-sm-2">
                        <input type="text" class="form-control isnumber" id="txtGrossSalary" disabled>
                    </div>
                </div>
                <div class="form-group none">
                    <label class="col-sm-2">ব্যংক এর মাধ্যমে প্রদান</label>
                    <div class="col-sm-4">
                        <input type="text" class="form-control  isnumber" id="txtPaymentAmountBankPc">
                    </div>
                    <label class="col-sm-2">নগদ প্রদান</label>
                    <div class="col-sm-4">
                        <input type="text" class="form-control  isnumber" id="txtPaymentAmountCashPc">
                    </div>
                </div>
                <div class="button-group text-center">
                    <input type="submit" class="btn btn-success" id="btnSave" onclick="Save();" value="Save">
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {
        GetEmployeeCode();
        GetMonthInfo();
        GetEmployeeBankName();
        GetEarrinngName();
        GetDeductionName();
        $(document).on("keyup", "tbody .deduction, tbody .earning", calculateGrid);
        $(document).on("keyup", "tbody .isnumber", isnumber);
    });



    $("#txtPaymentAmountCashPc").on('keyup', function () {
        $("#txtPaymentAmountBankPc").val(0);

        $("#txtPaymentAmountBankPc").val(parseFloat($("#txtGrossSalary").val()) - parseFloat($("#txtPaymentAmountCashPc").val()));
        if (parseFloat($("#txtPaymentAmountCashPc").val()) > parseFloat($("#txtGrossSalary").val())) {
            alert("Over to gross salary");
            $("#txtPaymentAmountCashPc").val(0);
            $("#txtPaymentAmountBankPc").val(0);
        }
    });
    $("#txtPaymentAmountBankPc").on('keyup', function () {
        $("#txtPaymentAmountCashPc").val(0);
        $("#txtPaymentAmountCashPc").val(parseFloat($("#txtGrossSalary").val()) - parseFloat($("#txtPaymentAmountBankPc").val()));

        if (parseFloat($("#txtPaymentAmountBankPc").val()) > parseFloat($("#txtGrossSalary").val())) {
            alert("Over to gross salary");
            $("#txtPaymentAmountBankPc").val(0);
            $("#txtPaymentAmountCashPc").val(0);
        }
    });




    function isnumber() {
        $('.isnumber').keypress(function (e) {
            var character = String.fromCharCode(e.keyCode);
            var newValue = this.value + character;
            if (isNaN(newValue) || parseFloat(newValue) * 100 % 1 > 0) {
                e.preventDefault();
                return false;
            }
        });
    }

    function calculateGrid() {
        var totalEarning = 0, totalDeduction = 0;
        $(".earning").each(function () {
            if (!isNaN(this.value) && this.value.length != 0) {
                var total = parseFloat(this.value);
                totalEarning += parseFloat(total);
            }
        });
        $(".deduction").each(function () {
            if (!isNaN(this.value) && this.value.length != 0) {
                var total = parseFloat(this.value);
                totalDeduction += parseFloat(total);
            }
        });
        $("#txtBasicEarning").val(totalEarning);
        $("#txtBasicDeduction").val(totalDeduction);
        $("#txtGrossSalary").val(totalEarning - totalDeduction);
    }

    function ShowToggle() {
        $(".list-area").fadeToggle(500);
        getEmployeeDetailById();
     
    
    }


    function GetEmployeeCode() {
        $.ajax({
            type: "GET",
            url: apiUrl + "PayRegisterGlobalApi/GetEmployeeCode",
            dataType: "Json",
            success: function (data) {
                $('#txtCode').html($("<option></option>").attr("value", 0).text("-- Select --"));
                $.each(data, function (key, item) {
                    var rows = "<option value='" + item.id + "'>" + item.name + "</option>";
                    $('#txtCode').append(rows);
                });
            },
            error: function (errormessage) { alert(errormessage.responseText); }
        });
    }


    function GetMonthInfo() {
        $.ajax({
            type: "GET",
            url: apiUrl + "PayRegisterGlobalApi/GetMonthInfo",
            dataType: "Json",
            success: function (data) {
                $('#txtMonth').html($("<option></option>").attr("value", 0).text("-- Select --"));
                $.each(data, function (key, item) {
                    var rows = "<option value='" + item.id + "'>" + item.name + "</option>";
                    $('#txtMonth').append(rows);
                });
            },
            error: function (errormessage) { alert(errormessage.responseText); }
        });
    }


    function GetEmployeeBankName() {
        $.ajax({
            type: "GET",
            url: apiUrl + "PayRegisterGlobalApi/GetEmployeeBankName",
            dataType: "Json",
            success: function (data) {
                $('#txtEmployeeBankName').html($("<option></option>").attr("value", 0).text("-- Select --"));
                $.each(data, function (key, item) {
                    var rows = "<option value='" + item.id + "'>" + item.name + "</option>";
                    $('#txtEmployeeBankName').append(rows);
                });
            },
            error: function (errormessage) { alert(errormessage.responseText); }
        });
    }



    function GetEmployeeBankBranceName() {
        $.ajax({
            type: "GET",
            @*url: "@UrlConfig.Action("GetBranchNameByBankId", "EmployeeGloApi")",*@
            url: apiUrl + "PayRegisterGlobalApi/GetEmployeeBankBranceName",
            dataType: "Json",
            data: { 'catId': $("#txtEmployeeBankName").val() },
            success: function (data) {
                $('#txtEmployeeBankBranch').html($("<option></option>").attr("value", 0).text("-- Select --"));
                $.each(data, function (key, item) {
                    var rows = "<option value=" + item.id + ">" + item.name + "</option>";
                    $('#txtEmployeeBankBranch').append(rows);
                });
            },
            error: function (errormessage) { alert(errormessage.responseText); }
        });
    }

    function GetDeductionName() {
        $.ajax({
            @*url: "@UrlConfig.Action("GetDetecttionName", "EmployeeGloApi")",*@
            url: apiUrl + "PayRegisterGlobalApi/GetDetecttionName",
            type: "GET",
            datatype: "json",
            success: function (data) {
                $('#Deductionbody').empty();
                $.each(data, function (key, item) {
                    var rows = "<tr>"
                        + "<td class='none'>" + item.id + "</td>"
                        + "<td>" + item.name + "</td>"
                        + "<td class='none'>" + item.anotherName + "</td>"
                        + "<td><input type='text' class='isnumber deduction' value='0'></td>"
                        + "</tr>";
                    $('#Deductionbody').append(rows);
                });
            },
        });
    }

    function GetEarrinngName() {
        $.ajax({
            @*url: "@UrlConfig.Action("GetEarrinngName", "PayRegisterGlobalApi")",*@
            url: apiUrl + "PayRegisterGlobalApi/GetEarrinngName",
            type: "GET",
            datatype: "json",
            success: function (data) {
                $('#Earningbody').empty();
                $.each(data, function (key, item) {
                    var rows = "<tr>"
                        + "<td class='none'>" + item.id + "</td>"
                        + "<td>" + item.name + "</td>"
                        + "<td class='none'>" + item.anotherName + "</td>"
                        + "<td><input type='text' class='isnumber earning' value='0'></td>"
                        + "</tr>";
                    $('#Earningbody').append(rows);
                });
            },
        });
    }


    function getEmployeeDetailById() {
        $.ajax({
            type: "GET",
            url: apiUrl + "PayRegisterGlobalApi/GetEmployeeDetalsList",
            dataType: "Json",
            data: { 'EmpId': $("#txtCode").val(), 'Month': $("#txtMonth").val(), 'Year': $("#txtYear").val() },
            success: function (data) {
                //alert(data[0].emName);
                //alert(JSON.stringify(data));
                $('#txtEmployeeName').val(data[0].emName);
                $('#txtDepartmentName').val(data[0].departmentName);
                $('#txtDesigationName').val(data[0].emDesignationName);
                $('#txtEmployeeBankAccountNo').val(data[0].emMainBankAccountNo);
                $('#txtEmployeeBankName').val(data[0].emBankId);

                var rows = "<option value=" + data[0].emMainBankBranchId + ">" + data[0].emBankBanchName + "</option>"; //value should be name...
                $('#txtEmployeeBankBranch').append(rows);
                $('#txtEmployeeBankBranch').val(data[0].emMainBankBranchId).trigger('change');
                

                for (var i = 0; i < data.length; i++) {
                    var table = $('#Earningbody, #Deductionbody');
                    subtotal = 0;
                    table.find('tr').each(function () {
                        var $tds = $(this).find('td');
                        if ($tds.eq(0).text() == data[i].salaryId) {
                            if (data[i].amount > 0) {
                                $tds.eq(3).find("input").val(data[i].amount).attr('disabled', true);
                            }
                            total = parseFloat(data[i].amount);
                        }
                        subtotal += total;
                    });
                    $("#txtBasicEarning").val(subtotal);
                }
                var table = $('#Earningbody');
                Earningtotal = 0;
                table.find('tr').each(function () {
                    var $tds = $(this).find('td');
                    Earning = parseFloat($tds.eq(3).find("input").val());
                    Earningtotal += Earning;
                });
                $("#txtBasicEarning").val(Earningtotal);

                var table = $('#Deductionbody');
                Deductiontotal = 0;
                table.find('tr').each(function () {
                    var $tds = $(this).find('td');
                    Deduction = parseFloat($tds.eq(3).find("input").val());
                    Deductiontotal += Deduction;
                });
                $("#txtBasicDeduction").val(Deductiontotal);
                $("#txtGrossSalary").val($("#txtBasicEarning").val()-$("#txtBasicDeduction").val());
            },
            error: function(errormessage) { alert(errormessage.responseText); }
        });
    }


    function Save() {
            
        if (confirm("Are you sure!!")) {
            var res = validation();
            if (res == true) {
                var vouchers = [];
                var table = $('#Earningbody, #Deductionbody');
                table.find('tr').each(function() {
                    var $tds = $(this).find('td'),
                        SalaryId = $tds.eq(0).text(),
                        SalaryType = $tds.eq(2).text(),
                        Amount = $tds.eq(3).find("input").val();

                    var voucher = {
                        EmId: $('#txtCode').val(),
                        MonthId: $('#txtMonth').val(),
                        AttYear: $('#txtYear').val(),
                        
                        EmSalaryBankAccountNo: $('#txtEmployeeBankAccountNo').val(),
                        EmBankId: $('#txtEmployeeBankName').val(),
                        EmBranchId: $('#txtEmployeeBankBranch').val(),
                        EmPaymentAmountCashPc: $('#txtPaymentAmountCashPc').val(),
                        EmPaymentAmountBankPc: $('#txtPaymentAmountBankPc').val(),

                        SumOfDetection: $('#txtBasicDeduction').val(),
                        SumOfEarring: $('#txtBasicEarning').val(),
                        SumOfGet: $('#txtGrossSalary').val(),

                        SalaryId:SalaryId,
                        SalaryType:SalaryType,
                        Amount: Amount,


                    };
                    vouchers.push(voucher);
                });
                //alert(JSON.stringify(vouchers));
                //alert(console.log(vouchers));
                //return false;
                $.ajax({
                    type: "Post",
                  
                    url: apiUrl + "PayRegisterGlobalApi/Post",
                    contentType: "application/json; charset=utf-8",
                    dataType: "Json",
                    data: JSON.stringify(vouchers),
                    success: function(data) {
                        alert(JSON.stringify(data));
                        location.reload(true);
                    },
                    error: function(errormessage) {
                        alert(errormessage.responseText);
                        location.reload(true);
                    }
                });
                return false;
            } else {
                alert("Please fill required field");
            }
            return false;
            location.reload(true);
        } else {
            return false;
        }
            
    }
</script>


