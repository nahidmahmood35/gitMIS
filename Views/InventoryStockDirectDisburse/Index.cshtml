@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-sm-12 ">
        <div class="box box-info">
            <div class="box-header with-border">Stock Direct Disburse </div>
            <div class="box-body">
                <div class="form-group">
                    <label class="col-sm-2" for="txtDate">Date  </label>
                    <div class="col-sm-4">
                        <input type="text" class="form-control datepicker " id="txtDate" />
                    </div>
                    <label class="col-sm-2">Received By </label>
                    <div class="col-sm-4">
                        <input type="text" class="form-control required" id="txtReceivedBy">
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2">Order No</label>
                    <div class="col-sm-4">
                        <input type="text" class="form-control required" id="OrderNo">
                    </div>
                    <label class="col-sm-2">Department</label>
                    <div class="col-sm-4">
                        <select class="form-control select2" id="txtDepartmentID">
                            <option value="0">--Select--</option>
                        </select>
                    </div>
                </div>
                
                <div class="form-group">
                    <div class="table-scrollable">
                        <table class="grid-table table table-striped table-hover table-bordered">
                            <tbody class="text-center" id="tbody"></tbody>
                        </table>
                    </div>
                    <table class="entry-form table table-bordered">
                        <tr>
                            <td class="none"><input type="text" class="none" id="txtProductId"></td>
                            <td class="col-sm-5"><input type="text" class="form-control" id="txtNameOfProduct" onclick="DipartmentVilitity()"></td>
                            <td class="col-sm-1"><input type="text" class="form-control" id="txtPerUnit" disabled></td>
                            <td class="col-sm-2"><input type="text" class="form-control isnumber" id="txtQty"></td>
                            <td class="col-sm-2"><input type="text" class="form-control isnumber" id="txtStock" disabled></td>
                            <td class="col-sm-2"><input type="text" class="form-control isnumber" id="txtStockInHand" disabled></td>
                            <td class="col-sm-1"><button type="button" class="btn btn-sm btn-blue" id="btnAdd" onclick="add();">Add</button></td>
                        </tr>
                        <tfoot>
                        <tr>
                            <th class="text-center">Product Name</th>
                            <th class="text-center"> Unit</th>
                            <th class="text-center">Qty</th>
                            <th class="text-center">Stock</th>
                            <th class="text-center">Stock in Hand</th>
                            <th class="text-center">Action</th>
                        </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
            <div class="button-group text-center">
                <input type="submit" class="btn btn-sm btn-success" id="btnSave" onclick="Save();" value="Save">
                <input type="submit" class="btn btn-sm btn-success" id="btnList" value="View All">
                <input type="submit" class="btn btn-sm btn-success" id="" value="New" onclick="location.reload();">
            </div>
        </div>
    </div>

    <div class="col-sm-12 toshow" style="display:none;">
        <div class="box box-info">
            <div class="box-header with-border">Stock Requsition Allocation</div>

            <div class="box-body">
                <div class="form-group">
                    <table class="table table-bordered table-striped table-hover datatable">
                        <tbody id="dataget"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


<script>

    $(document).ready(function () {

        GetDepartmentList();
        //    $(document).on("change", "#txtSpdTkOrPc", calculateGrid);
        //  GetCompanyList();
        $('#txtNameOfProduct').autocomplete({
            source: function (request, response) {
                $.ajax({
                    type: "GET",
                    url: "@UrlConfig.Action("GetProductName", "InventoryStockDirectDisburseApi")",
                    dataType: "Json",
                    data: { 'NameOfProduct': $("#txtNameOfProduct").val(), 'dipId': $("#txtDepartmentID option:selected").val() },
                    success: function (data) {
                        response(data.slice(0, 10));
                    }
                });
            },
            select: function (event, ui) {
                $("#txtProductId").val(ui.item.id);
                $("#txtNameOfProduct").val(ui.item.productName);
                $("#txtPerUnit").val(ui.item.unit);
                $("#txtStock").val(ui.item.stock);
                $("#txtStockInHand").val(ui.item.stockInHand);
                $("#txtQty").focus();
                return false;
            },
            minLength: 1
        }).data("ui-autocomplete")._renderItem = function (ul, item) {
            if (ul.children().length === 0) {
                $("<thead><tr><th>Id</th><th>Name</th>0<th>Unit</th></tr></thead>").appendTo(ul);
            }
            var html = "<td>" + item.id + "</td>";
            html += "<td>" + item.productName + "</td>";
            html += "<td>" + item.unit + "</td>";
            return $("<tr></tr>").append(html).appendTo(ul);
        };
    });     // end doc ready


    function DipartmentVilitity() {
        if ($("#txtDepartmentID option:selected").val() == '0') {
            alert('please select department!!');
            $("#txtDepartmentID").focus();
        }
    }


    function GetDepartmentList() {
        $.ajax({
            type: "GET",
            url: '@UrlConfig.Action("GetDepartmentList", "InventoryStockRequsitionReqApi")',
            dataType: "Json",
            //  data: { searchString: 0 },
            success: function (data) {
                $('#txtDepartmentID').html($("<option></option>").attr("value", 0).text("-- Select --"));
                $.each(data, function (key, item) {
                    var rows = "<option value=" + item.id + ">" + item.name + "</option>";
                    $('#txtDepartmentID').append(rows);
                });
            },
            error: function (errormessage) { alert(errormessage.responseText); }
        });
    }


    //   $('#txtBirthDate').val(ToJsonDate(ui.item.dateOfBirth));

    function add() {
        var res = validate();
        if (res == false) {
            return false;
        }
        var ProductId = $("#txtProductId").val();
        var ProducteName = $("#txtNameOfProduct").val();
        var productQty = $("#txtQty").val();
        var unite = $("#txtPerUnit").val();
        var Stock = $("#txtStock").val();
        var tockInHand = $("#txtStockInHand").val();
        var html = '';
        if ($('#tbody').html != '') { html = $('#tbody').html(); } else { html = ''; }
        html += '<tr>';
        html += '<td class="none itemId">' + ProductId + '</td>';
        html += '<td>' + ProducteName + '</td>';
        html += '<td>' + unite + '</td>';
        html += '<td>' + productQty + '</td>';
        html += '<td>' + Stock + '</td>';
        html += '<td>' + tockInHand + '</td>';
        html += '<td class="col-sm-1"><a href="javascript:;" class="deleteRow"><span class="glyphicon glyphicon-trash"></span></a></td>';
        html += '</tr>';
        $('#tbody').html(html);
        $("#txtNameOfProduct").focus();
        $('.entry-form input').val("");
        return false;

    }
    function validate() {
        var isValid = true;
        var table = $("table #tbody");
        var itemId = $("#txtProductId").val();
        table.find('tr').each(function (i) {
            var $tds = $(this).find('td'),
                tableValue = $tds.eq(0).text();
            if (tableValue == itemId) {
                alert("This product Already Exist");
                $("#txtNameOfProduct").focus();
                isValid = false;
            }
        });
         if (parseFloat($("#txtQty").val()) > parseFloat($("#txtStock").val())) { alert("This Item Stock not match."); isValid = false; }
        if ($("#txtProductId").val() == "") { alert("Pls Add quantity."); isValid = false; }
        if ($("#txtQty").val() == "") { alert("Pls Add item."); isValid = false; }
        return isValid;
    };


    $("table #tbody").on("click", "a.deleteRow", function (event) {
        event.preventDefault();
        $(this).closest('tr').remove();

        return false;
    });


    function Save() {

        var res = true;
        var custom = true;
        if (res & custom == true) {
            var vouchers = [];
            var table = $('table #tbody');

            table.find('tr').each(function () {
                var $tds = $(this).find('td'),
                    tProductId = $tds.eq(0).text(),
                    tUnite = $tds.eq(2).text(),
                    tProductQty = $tds.eq(3).text();

                var voucher = {
                    ProductId: tProductId,
                    ReqQty: tProductQty,
                    Unit: tUnite,
                    RecevedBy: $('#txtReceivedBy').val(),
                    UserDtls: "@System.Web.HttpContext.Current.Session["UserName"]",
                    ReqDate: $('#txtDate').val(),
                    DeptId: $("#txtDepartmentID option:selected").val(),
                    //ReqNote: $("#txtNote").val(),
                    UserName: "@System.Web.HttpContext.Current.Session["UserName"]",
                    ReqNo: $("#OrderNo").val() + '(Direct Disburse)'
                };
                vouchers.push(voucher);
            });
            //alert(JSON.stringify(vouchers));
            //return false;
            var json = { aModels: vouchers };
            $.ajax({
                type: "POST",
                url: '@UrlConfig.Action("Save", "InventoryStockDirectDisburseApi")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(vouchers),
                success: function (data) {
                    if (data.output != "error") {
                        alert(data.msg);
                        //    window.open("/Report/ReportViewer/ReportViewer.aspx", "_blank");
                        location.reload(true);
                    } else {
                        alert(data.msg);
                    }
                }
            });
            return false;
        }
        else { alert("Please fill required field"); }
        return false;
    }
    //----------------Data table-------------------
    $('#btnList').on('click', function () {
        $(".toshow").fadeToggle(500);
        LoadDataTable();
    });
    function LoadDataTable() {
        $(".datatable").DataTable({
            destroy: true,
            "ajax": {
                url: apiUrl + "InventoryStockDirectDisburseApi/GetRequisitionListTable?userName=" +@System.Web.HttpContext.Current.Session["UserName"] +"",
                dataSrc: ""
            },
            "columns": [
                { "data": "reqNo", "title": "ReqNo" },
                { "data": "reqDate", "title": "ReqDate", "render": function (data) { return (window.ToJsonDate(data)); } },
                { "data": "recevedBy", "title": "ReqNote" },
                { "data": "deptName", "title": "DeptName" },
                //{ "data": "reqNo", "title": "ReqNo" , "render": function (data) { return '<a href="javascript:;" onclick="GetPharRequisitionDetailList(' + data + ');">' + data + '</a>'; } },
                //{ "data": "reqBy", "title": "ReqBy" },
                  {  "data": "reqNo", width: "80px", "title": "Action","render": function (data) {
                 return "<a href='javascript:;' class='md-trigger' onclick='return GetDeleteInvoice(\"" + data + "\")'><span class='glyphicon glyphicon-trash'></span></a>";
                         }}

            ]

        });
    }
    //----------------Data table-------------------
    function GetDeleteInvoice(reqNumber) {
        var r = confirm("Are You Sure!");
        if (r == true) {
            $.ajax({
                type: "GET",
                url: apiUrl + "InventoryStockDirectDisburseApi/GetDeleteRefNo?reqNumber=" + reqNumber + "",
                dataType: "Json",
                success: function (data) {
                    if (data.output !== "error") {
                        alert(data.result);
                        location.reload(true);
                    } else {
                        alert(data.result);
                    }
                },
                error: function (errormessage) { alert(errormessage.responseText); }
            });
        }

    }
</script>

